{"ast":null,"code":"var _jsxFileName = \"/Users/isobolev/IdeaProjects/IoT-smart-shop/user-app/src/components/QRCode.js\";\nimport { Html5Qrcode } from \"html5-qrcode\";\nimport React, { useState, useEffect } from \"react\";\nimport Swal from 'sweetalert2';\nimport { DEFAULT_URL } from \"../index\";\nwindow.Swal = Swal;\nfunction QRCode({\n  onAdd\n}) {\n  const [isEnabled, setEnabled] = useState(false);\n  const [qrMessage, setQrMessage] = useState(\"\");\n  useEffect(() => {\n    const config = {\n      fps: 10,\n      qrbox: {\n        width: 200,\n        height: 200\n      }\n    };\n    const html5QrCode = new Html5Qrcode(\"qrCodeContainer\");\n    const qrScanerStop = () => {\n      if (html5QrCode && html5QrCode.isScanning) {\n        html5QrCode.stop().then(ignore => console.log(\"Scaner stop\")).catch(err => console.log(\"Scaner error\"));\n      }\n    };\n    const qrCodeSuccess = decodedText => {\n      setQrMessage(decodedText);\n      Swal.fire({\n        title: \"Товар успешно добавлен в корзину!\",\n        text: \"Продолжайте свои покупки\",\n        icon: \"success\",\n        timer: 2000,\n        showCancelButton: false,\n        showConfirmButton: false\n      }).then(setEnabled(true));\n      let req = new XMLHttpRequest();\n      req.open(\"GET\", `${DEFAULT_URL}/products?code=${qrMessage}`, true);\n      req.onload = () => handleResponse(req.responseText);\n      req.onerror = () => alert(\"Сервер временно недоступен\");\n      req.setRequestHeader('Content-Type', 'application/json');\n      req.send();\n      setEnabled(false);\n    };\n    const handleResponse = text => {\n      let response = JSON.parse(text);\n      if (response.status === 200) {\n        onAdd(response.answer);\n      } else {\n        alert(\"Возникла ошибка сканирования! Попробуйте еще раз.\");\n      }\n    };\n    if (isEnabled) {\n      html5QrCode.start({\n        facingMode: \"environment\"\n      }, config, qrCodeSuccess);\n      setQrMessage(\"\");\n    } else {\n      qrScanerStop();\n    }\n    return () => {\n      qrScanerStop();\n    };\n  }, [isEnabled, onAdd]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scaner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 18\n    }\n  }, \"\\u041E\\u0442\\u0441\\u043A\\u0430\\u043D\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 qr-\\u043A\\u043E\\u0434 \\u043D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u043E\\u0433\\u043E \\u0442\\u043E\\u0432\\u0430\\u0440\\u0430, \\u0447\\u0442\\u043E\\u0431\\u044B \\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0435\\u0433\\u043E \\u0432 \\u043A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0443!\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"qrCodeContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start-button\",\n    onClick: () => setEnabled(!isEnabled),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, isEnabled ? \" Закрыть сканирование \" : \"Сканировать qr-код\")));\n}\nexport default QRCode;","map":{"version":3,"names":["Html5Qrcode","React","useState","useEffect","Swal","DEFAULT_URL","window","QRCode","onAdd","isEnabled","setEnabled","qrMessage","setQrMessage","config","fps","qrbox","width","height","html5QrCode","qrScanerStop","isScanning","stop","then","ignore","console","log","catch","err","qrCodeSuccess","decodedText","fire","title","text","icon","timer","showCancelButton","showConfirmButton","req","XMLHttpRequest","open","onload","handleResponse","responseText","onerror","alert","setRequestHeader","send","response","JSON","parse","status","answer","start","facingMode","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick"],"sources":["/Users/isobolev/IdeaProjects/IoT-smart-shop/user-app/src/components/QRCode.js"],"sourcesContent":["import {Html5Qrcode} from \"html5-qrcode\";\nimport React, {useState, useEffect} from \"react\";\nimport Swal from 'sweetalert2';\nimport {DEFAULT_URL} from \"../index\";\n\nwindow.Swal = Swal;\n\nfunction QRCode({onAdd}) {\n\n    const [isEnabled, setEnabled] = useState(false);\n    const [qrMessage, setQrMessage] = useState(\"\");\n\n    useEffect(() => {\n        const config = {fps: 10, qrbox: {width: 200, height: 200}};\n\n        const html5QrCode = new Html5Qrcode(\"qrCodeContainer\");\n\n        const qrScanerStop = () => {\n            if (html5QrCode && html5QrCode.isScanning) {\n                    html5QrCode\n                        .stop()\n                        .then((ignore) => console.log(\"Scaner stop\"))\n                        .catch((err) => console.log(\"Scaner error\"));\n            }\n        };\n\n            const qrCodeSuccess = (decodedText) => {\n                setQrMessage(decodedText);\n                Swal.fire({\n                    title: \"Товар успешно добавлен в корзину!\",\n                    text: \"Продолжайте свои покупки\",\n                    icon: \"success\",\n                    timer: 2000,\n                    showCancelButton: false,\n                    showConfirmButton: false\n                }).then(\n                    setEnabled(true)\n                )\n\n                let req = new XMLHttpRequest();\n                req.open(\"GET\", `${DEFAULT_URL}/products?code=${qrMessage}`, true);\n                req.onload = () => handleResponse(req.responseText);\n                req.onerror = () => alert(\"Сервер временно недоступен\");\n                req.setRequestHeader('Content-Type', 'application/json');\n                req.send();\n\n                setEnabled(false)\n            };\n\n            const handleResponse = (text) => {\n                let response = JSON.parse(text);\n                    if (response.status === 200) {\n                        onAdd(response.answer)\n                    } else {\n                        alert(\"Возникла ошибка сканирования! Попробуйте еще раз.\");\n                    }\n                }\n            ;\n\n            if (isEnabled) {\n                html5QrCode.start({facingMode: \"environment\"}, config, qrCodeSuccess);\n                setQrMessage(\"\");\n            } else {\n                qrScanerStop();\n            }\n\n            return () => {\n                qrScanerStop();\n            };\n        }, [isEnabled, onAdd]\n    )\n    ;\n\n    return (\n        <div className=\"scaner\">\n            <div><h1>Отсканируйте qr-код необходимого товара, чтобы добавить его в корзину!</h1></div>\n            <div id=\"qrCodeContainer\"/>\n            <br/><br/>\n            <div>\n                <br/>\n                <button className=\"start-button\" onClick={() => setEnabled(!isEnabled)}>\n                    {isEnabled ? \" Закрыть сканирование \" : \"Сканировать qr-код\"}\n                </button>\n            </div>\n        </div>\n    );\n\n\n}\n\nexport default QRCode;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}