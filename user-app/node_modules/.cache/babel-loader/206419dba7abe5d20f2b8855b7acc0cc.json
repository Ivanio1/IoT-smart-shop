{"ast":null,"code":"var _jsxFileName = \"/home/ivan/IdeaProjects/IoT-smart-shop/user-app/src/components/Header.js\";\nimport React, { useState } from \"react\";\nimport { FaShoppingCart } from \"react-icons/fa\";\nimport Order from \"./Order\";\nimport Swal from \"sweetalert2\";\nimport { DEFAULT_URL } from \"../index\";\nwindow.Swal = Swal;\nexport default function Header({\n  orders,\n  onDelete,\n  fullDelete\n}) {\n  let [cartOpen, setCartOpen] = useState(false);\n\n  function showOrders(orders) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 22\n      }\n    }, \"\\u0412\\u0430\\u0448\\u0430 \\u043A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0430\"), orders.map(el => /*#__PURE__*/React.createElement(Order, {\n      key: el.id,\n      item: el,\n      onDelete: onDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    })), \"                        \", /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 40\n      }\n    }, \"\\u041E\\u0431\\u0449\\u0430\\u044F \\u0441\\u0443\\u043C\\u043C\\u0430 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430 - $\", orders.reduce((acc, el) => acc + el.price, 0)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }, \"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0430:\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      onClick: () => {\n        Swal.fire({\n          title: \"Оплата по ApplePay проведена!\",\n          text: \"Спасибо большое за покупку, ждем вас снова!\",\n          icon: \"success\",\n          timer: 2000,\n          showCancelButton: false,\n          showConfirmButton: false\n        });\n        sendReq('applePay');\n        fullDelete();\n        setCartOpen(cartOpen = !cartOpen);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }\n    }, \"ApplePay\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      onClick: async () => {\n        await Swal.fire({\n          title: \"Ожидание оплаты!\",\n          icon: \"info\",\n          html: \"<img src='/sbp.jpg' style='width:150px; height: 150px' alt=''>\",\n          timer: 7000,\n          showCancelButton: false,\n          showConfirmButton: false\n        });\n        await Swal.fire({\n          title: \"Оплата по СБП проведена!\",\n          text: \"Спасибо большое за покупку, ждем вас снова!\",\n          icon: \"success\",\n          timer: 2000,\n          showCancelButton: false,\n          showConfirmButton: false\n        });\n        sendReq('sbp');\n        fullDelete();\n        setCartOpen(cartOpen = !cartOpen);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, \"\\u0421\\u0411\\u041F\")));\n  }\n\n  function showNothing() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"empty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"\\u0422\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432 \\u043D\\u0435\\u0442!\");\n  }\n\n  function sendReq(Str) {\n    let req = new XMLHttpRequest();\n    req.open(\"POST\", `${DEFAULT_URL}/pay?type=${Str}`, true);\n\n    req.onload = () => handleResponse(req.responseText);\n\n    req.onerror = () => alert(\"Сервер временно недоступен\");\n\n    req.setRequestHeader('Content-Type', 'application/json');\n    req.send(JSON.stringify(orders));\n  }\n\n  const handleResponse = text => {\n    let response = JSON.parse(text);\n\n    if (response.status === 200) {} else {\n      alert(\"Возникла ошибка отправки! Попробуйте еще раз.\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"\\u0423\\u043C\\u043D\\u044B\\u0439 \\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\"), /*#__PURE__*/React.createElement(FaShoppingCart, {\n    onClick: () => setCartOpen(cartOpen = !cartOpen),\n    className: `shop-cart-button ${cartOpen && 'active'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), cartOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, orders.length > 0 ? showOrders(orders) : showNothing(), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: async () => {\n      await Swal.fire({\n        title: \"Ожидание оплаты!\",\n        icon: \"info\",\n        html: \"<img src='../sbp.png' style='width:150px; height: 150px' alt=''>\",\n        timer: 7000,\n        showCancelButton: false,\n        showConfirmButton: false\n      });\n      await Swal.fire({\n        title: \"Оплата по СБП проведена!\",\n        text: \"Спасибо большое за покупку, ждем вас снова!\",\n        icon: \"success\",\n        timer: 2000,\n        showCancelButton: false,\n        showConfirmButton: false\n      });\n      sendReq('sbp');\n      fullDelete();\n      setCartOpen(cartOpen = !cartOpen);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, \"\\u0421\\u0411\\u041F\"))));\n}","map":{"version":3,"sources":["/home/ivan/IdeaProjects/IoT-smart-shop/user-app/src/components/Header.js"],"names":["React","useState","FaShoppingCart","Order","Swal","DEFAULT_URL","window","Header","orders","onDelete","fullDelete","cartOpen","setCartOpen","showOrders","map","el","id","reduce","acc","price","fire","title","text","icon","timer","showCancelButton","showConfirmButton","sendReq","html","showNothing","Str","req","XMLHttpRequest","open","onload","handleResponse","responseText","onerror","alert","setRequestHeader","send","JSON","stringify","response","parse","status","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,cAAR,QAA6B,gBAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAAQC,WAAR,QAA0B,UAA1B;AAEAC,MAAM,CAACF,IAAP,GAAcA,IAAd;AAEA,eAAe,SAASG,MAAT,CAAgB;AAACC,EAAAA,MAAD;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAhB,EAAgD;AAC3D,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAtC;;AAEA,WAASY,UAAT,CAAoBL,MAApB,EAA4B;AACxB,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAAL,EAA2BA,MAAM,CAACM,GAAP,CAAWC,EAAE,iBACxC,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,EAAE,CAACC,EAAf;AAAmB,MAAA,IAAI,EAAED,EAAzB;AAA6B,MAAA,QAAQ,EAAEN,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD2B,CAA3B,2CAEuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHAA2BD,MAAM,CAACS,MAAP,CAAc,CAACC,GAAD,EAAMH,EAAN,KAAaG,GAAG,GAAGH,EAAE,CAACI,KAApC,EAA2C,CAA3C,CAA3B,CAFvB,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAG,MAAA,SAAS,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAFJ,eAGI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAE,MAAM;AACtCf,QAAAA,IAAI,CAACgB,IAAL,CAAU;AACNC,UAAAA,KAAK,EAAE,+BADD;AAENC,UAAAA,IAAI,EAAE,6CAFA;AAGNC,UAAAA,IAAI,EAAE,SAHA;AAINC,UAAAA,KAAK,EAAE,IAJD;AAKNC,UAAAA,gBAAgB,EAAE,KALZ;AAMNC,UAAAA,iBAAiB,EAAE;AANb,SAAV;AASAC,QAAAA,OAAO,CAAC,UAAD,CAAP;AACAjB,QAAAA,UAAU;AACVE,QAAAA,WAAW,CAACD,QAAQ,GAAG,CAACA,QAAb,CAAX;AACH,OAbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAoBI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAE,YAAY;AAE5C,cAAMP,IAAI,CAACgB,IAAL,CAAU;AACZC,UAAAA,KAAK,EAAE,kBADK;AAEZE,UAAAA,IAAI,EAAE,MAFM;AAGZK,UAAAA,IAAI,EAAE,gEAHM;AAIZJ,UAAAA,KAAK,EAAE,IAJK;AAKZC,UAAAA,gBAAgB,EAAE,KALN;AAMZC,UAAAA,iBAAiB,EAAE;AANP,SAAV,CAAN;AASA,cAAMtB,IAAI,CAACgB,IAAL,CAAU;AACZC,UAAAA,KAAK,EAAE,0BADK;AAEZC,UAAAA,IAAI,EAAE,6CAFM;AAGZC,UAAAA,IAAI,EAAE,SAHM;AAIZC,UAAAA,KAAK,EAAE,IAJK;AAKZC,UAAAA,gBAAgB,EAAE,KALN;AAMZC,UAAAA,iBAAiB,EAAE;AANP,SAAV,CAAN;AASAC,QAAAA,OAAO,CAAC,KAAD,CAAP;AACAjB,QAAAA,UAAU;AACVE,QAAAA,WAAW,CAACD,QAAQ,GAAG,CAACA,QAAb,CAAX;AACH,OAvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BApBJ,CAJA,CAAR;AAuDH;;AAED,WAASkB,WAAT,GAAuB;AACnB,wBAAQ;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAAR;AAGH;;AAED,WAASF,OAAT,CAAiBG,GAAjB,EAAsB;AAClB,QAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAD,IAAAA,GAAG,CAACE,IAAJ,CAAS,MAAT,EAAkB,GAAE5B,WAAY,aAAYyB,GAAI,EAAhD,EAAmD,IAAnD;;AACAC,IAAAA,GAAG,CAACG,MAAJ,GAAa,MAAMC,cAAc,CAACJ,GAAG,CAACK,YAAL,CAAjC;;AACAL,IAAAA,GAAG,CAACM,OAAJ,GAAc,MAAMC,KAAK,CAAC,4BAAD,CAAzB;;AACAP,IAAAA,GAAG,CAACQ,gBAAJ,CAAqB,cAArB,EAAqC,kBAArC;AACAR,IAAAA,GAAG,CAACS,IAAJ,CAASC,IAAI,CAACC,SAAL,CAAelC,MAAf,CAAT;AACH;;AAED,QAAM2B,cAAc,GAAIb,IAAD,IAAU;AACzB,QAAIqB,QAAQ,GAAGF,IAAI,CAACG,KAAL,CAAWtB,IAAX,CAAf;;AACA,QAAIqB,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B,CAC5B,CADD,MACO;AACHP,MAAAA,KAAK,CAAC,+CAAD,CAAL;AACH;AACJ,GANL;;AASA,sBACI;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFAFJ,eAII,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAE,MAAM1B,WAAW,CAACD,QAAQ,GAAG,CAACA,QAAb,CAA1C;AACgB,IAAA,SAAS,EAAG,oBAAmBA,QAAQ,IAAI,QAAS,EADpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAMKA,QAAQ,iBACL;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGQH,MAAM,CAACsC,MAAP,GAAgB,CAAhB,GAAoBjC,UAAU,CAACL,MAAD,CAA9B,GAAyCqB,WAAW,EAH5D,eAMI;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAE,YAAY;AAE5C,YAAMzB,IAAI,CAACgB,IAAL,CAAU;AACZC,QAAAA,KAAK,EAAE,kBADK;AAEZE,QAAAA,IAAI,EAAE,MAFM;AAGZK,QAAAA,IAAI,EAAE,kEAHM;AAIZJ,QAAAA,KAAK,EAAE,IAJK;AAKZC,QAAAA,gBAAgB,EAAE,KALN;AAMZC,QAAAA,iBAAiB,EAAE;AANP,OAAV,CAAN;AASA,YAAMtB,IAAI,CAACgB,IAAL,CAAU;AACZC,QAAAA,KAAK,EAAE,0BADK;AAEZC,QAAAA,IAAI,EAAE,6CAFM;AAGZC,QAAAA,IAAI,EAAE,SAHM;AAIZC,QAAAA,KAAK,EAAE,IAJK;AAKZC,QAAAA,gBAAgB,EAAE,KALN;AAMZC,QAAAA,iBAAiB,EAAE;AANP,OAAV,CAAN;AASAC,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAjB,MAAAA,UAAU;AACVE,MAAAA,WAAW,CAACD,QAAQ,GAAG,CAACA,QAAb,CAAX;AACH,KAvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ,CAPR,CADJ,CADJ;AA+CH","sourcesContent":["import React, {useState} from \"react\";\nimport {FaShoppingCart} from \"react-icons/fa\";\nimport Order from \"./Order\";\nimport Swal from \"sweetalert2\";\nimport {DEFAULT_URL} from \"../index\";\n\nwindow.Swal = Swal;\n\nexport default function Header({orders, onDelete, fullDelete}) {\n    let [cartOpen, setCartOpen] = useState(false)\n\n    function showOrders(orders) {\n        return (<div><h2>Ваша корзина</h2>{orders.map(el => (\n                <Order key={el.id} item={el} onDelete={onDelete}/>\n            ))}                        <h2>Общая сумма заказа - ${orders.reduce((acc, el) => acc + el.price, 0)}</h2>\n\n                <div>\n                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                    <a className='a'>Оплата:</a>\n                    <button className=\"button\" onClick={() => {\n                        Swal.fire({\n                            title: \"Оплата по ApplePay проведена!\",\n                            text: \"Спасибо большое за покупку, ждем вас снова!\",\n                            icon: \"success\",\n                            timer: 2000,\n                            showCancelButton: false,\n                            showConfirmButton: false\n                        })\n\n                        sendReq('applePay')\n                        fullDelete()\n                        setCartOpen(cartOpen = !cartOpen)\n                    }\n\n                    }>ApplePay\n                    </button>\n                    <button className=\"button\" onClick={async () => {\n\n                        await Swal.fire({\n                            title: \"Ожидание оплаты!\",\n                            icon: \"info\",\n                            html: \"<img src='/sbp.jpg' style='width:150px; height: 150px' alt=''>\",\n                            timer: 7000,\n                            showCancelButton: false,\n                            showConfirmButton: false\n                        })\n\n                        await Swal.fire({\n                            title: \"Оплата по СБП проведена!\",\n                            text: \"Спасибо большое за покупку, ждем вас снова!\",\n                            icon: \"success\",\n                            timer: 2000,\n                            showCancelButton: false,\n                            showConfirmButton: false\n                        })\n\n                        sendReq('sbp')\n                        fullDelete()\n                        setCartOpen(cartOpen = !cartOpen)\n                    }\n\n                    }>СБП\n                    </button>\n                </div>\n            </div>\n\n        )\n    }\n\n    function showNothing() {\n        return (<div className='empty'>\n            Товаров нет!\n        </div>);\n    }\n\n    function sendReq(Str) {\n        let req = new XMLHttpRequest();\n        req.open(\"POST\", `${DEFAULT_URL}/pay?type=${Str}`, true);\n        req.onload = () => handleResponse(req.responseText);\n        req.onerror = () => alert(\"Сервер временно недоступен\");\n        req.setRequestHeader('Content-Type', 'application/json');\n        req.send(JSON.stringify(orders));\n    }\n\n    const handleResponse = (text) => {\n            let response = JSON.parse(text);\n            if (response.status === 200) {\n            } else {\n                alert(\"Возникла ошибка отправки! Попробуйте еще раз.\");\n            }\n        }\n    ;\n\n    return (\n        <header className=\"head\">\n            <div>\n                <br/>\n                <span className=\"logo\">Умный магазин</span>\n\n                <FaShoppingCart onClick={() => setCartOpen(cartOpen = !cartOpen)}\n                                className={`shop-cart-button ${cartOpen && 'active'}`}/>\n                {cartOpen && (\n                    <div className='shop-cart'>\n\n                        {\n                            orders.length > 0 ? showOrders(orders) : showNothing()\n                        }\n\n                        <button className=\"button\" onClick={async () => {\n\n                            await Swal.fire({\n                                title: \"Ожидание оплаты!\",\n                                icon: \"info\",\n                                html: \"<img src='../sbp.png' style='width:150px; height: 150px' alt=''>\",\n                                timer: 7000,\n                                showCancelButton: false,\n                                showConfirmButton: false\n                            })\n\n                            await Swal.fire({\n                                title: \"Оплата по СБП проведена!\",\n                                text: \"Спасибо большое за покупку, ждем вас снова!\",\n                                icon: \"success\",\n                                timer: 2000,\n                                showCancelButton: false,\n                                showConfirmButton: false\n                            })\n\n                            sendReq('sbp')\n                            fullDelete()\n                            setCartOpen(cartOpen = !cartOpen)\n                        }\n\n                        }>СБП\n                        </button>\n                    </div>\n\n                )}\n            </div>\n        </header>)\n}"]},"metadata":{},"sourceType":"module"}