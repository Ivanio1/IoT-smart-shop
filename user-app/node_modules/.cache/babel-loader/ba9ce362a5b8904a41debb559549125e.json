{"ast":null,"code":"var VideoConstraintsUtil = function () {\n  function VideoConstraintsUtil() {}\n\n  VideoConstraintsUtil.isMediaStreamConstraintsValid = function (videoConstraints, logger) {\n    if (typeof videoConstraints !== \"object\") {\n      var typeofVideoConstraints = typeof videoConstraints;\n      logger.logError(\"videoConstraints should be of type object, the \" + \"object passed is of type \".concat(typeofVideoConstraints, \".\"), true);\n      return false;\n    }\n\n    var bannedKeys = [\"autoGainControl\", \"channelCount\", \"echoCancellation\", \"latency\", \"noiseSuppression\", \"sampleRate\", \"sampleSize\", \"volume\"];\n    var bannedkeysSet = new Set(bannedKeys);\n    var keysInVideoConstraints = Object.keys(videoConstraints);\n\n    for (var _i = 0, keysInVideoConstraints_1 = keysInVideoConstraints; _i < keysInVideoConstraints_1.length; _i++) {\n      var key = keysInVideoConstraints_1[_i];\n\n      if (bannedkeysSet.has(key)) {\n        logger.logError(\"\".concat(key, \" is not supported videoConstaints.\"), true);\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  return VideoConstraintsUtil;\n}();\n\nexport { VideoConstraintsUtil };","map":{"version":3,"sources":["../../src/utils.ts"],"names":[],"mappings":"AAeA,IAAA,oBAAA,GAAA,YAAA;AAAA,WAAA,oBAAA,GAAA,CAqCC;;AApCiB,EAAA,oBAAA,CAAA,6BAAA,GAAd,UACI,gBADJ,EAEI,MAFJ,EAEkB;AACd,QAAI,OAAO,gBAAP,KAA4B,QAAhC,EAA0C;AACtC,UAAM,sBAAsB,GAAG,OAAO,gBAAtC;AACA,MAAA,MAAM,CAAC,QAAP,CACI,oDACM,4BAAA,MAAA,CAA4B,sBAA5B,EAAkD,GAAlD,CAFV,EAGwB,IAHxB;AAIA,aAAO,KAAP;AACH;;AAGD,QAAM,UAAU,GAAG,CACf,iBADe,EAEf,cAFe,EAGf,kBAHe,EAIf,SAJe,EAKf,kBALe,EAMf,YANe,EAOf,YAPe,EAQf,QARe,CAAnB;AAUA,QAAM,aAAa,GAAG,IAAI,GAAJ,CAAQ,UAAR,CAAtB;AACA,QAAM,sBAAsB,GAAG,MAAM,CAAC,IAAP,CAAY,gBAAZ,CAA/B;;AACA,SAAkB,IAAA,EAAA,GAAA,CAAA,EAAA,wBAAA,GAAA,sBAAlB,EAAkB,EAAA,GAAA,wBAAA,CAAA,MAAlB,EAAkB,EAAA,EAAlB,EAA0C;AAArC,UAAM,GAAG,GAAA,wBAAA,CAAA,EAAA,CAAT;;AACD,UAAI,aAAa,CAAC,GAAd,CAAkB,GAAlB,CAAJ,EAA4B;AACxB,QAAA,MAAM,CAAC,QAAP,CACI,GAAA,MAAA,CAAG,GAAH,EAAM,oCAAN,CADJ,EAEwB,IAFxB;AAGA,eAAO,KAAP;AACH;AACJ;;AAED,WAAO,IAAP;AACH,GAnCa;;AAoClB,SAAA,oBAAA;AAAC,CArCD,EAAA","sourceRoot":"","sourcesContent":["var VideoConstraintsUtil = (function () {\n    function VideoConstraintsUtil() {\n    }\n    VideoConstraintsUtil.isMediaStreamConstraintsValid = function (videoConstraints, logger) {\n        if (typeof videoConstraints !== \"object\") {\n            var typeofVideoConstraints = typeof videoConstraints;\n            logger.logError(\"videoConstraints should be of type object, the \"\n                + \"object passed is of type \".concat(typeofVideoConstraints, \".\"), true);\n            return false;\n        }\n        var bannedKeys = [\n            \"autoGainControl\",\n            \"channelCount\",\n            \"echoCancellation\",\n            \"latency\",\n            \"noiseSuppression\",\n            \"sampleRate\",\n            \"sampleSize\",\n            \"volume\"\n        ];\n        var bannedkeysSet = new Set(bannedKeys);\n        var keysInVideoConstraints = Object.keys(videoConstraints);\n        for (var _i = 0, keysInVideoConstraints_1 = keysInVideoConstraints; _i < keysInVideoConstraints_1.length; _i++) {\n            var key = keysInVideoConstraints_1[_i];\n            if (bannedkeysSet.has(key)) {\n                logger.logError(\"\".concat(key, \" is not supported videoConstaints.\"), true);\n                return false;\n            }\n        }\n        return true;\n    };\n    return VideoConstraintsUtil;\n}());\nexport { VideoConstraintsUtil };\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}