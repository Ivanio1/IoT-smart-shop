{"ast":null,"code":"import { observable, decorate } from \"mobx\";\nimport { RequestState } from \"types/RequestState\";\n\nclass UserStore {\n  constructor() {\n    this.user = null;\n    this.state = RequestState.PENDING;\n\n    this.loginVk = code => {\n      this.state = RequestState.LOADING;\n      return fetch(`${process.env.REACT_APP_API_HOST}/auth/login/vk`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          code\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        switch (res.status) {\n          case 200:\n          case 201:\n            return res.json();\n\n          default:\n            this.setError();\n            return Promise.reject();\n        }\n      }).then(user => this.setUser(user));\n    };\n\n    this.getProfile = () => {\n      this.state = RequestState.LOADING;\n      const token = sessionStorage.getItem(\"token\");\n      if (!token) Promise.reject();\n      return fetch(`${process.env.REACT_APP_API_HOST}/users/profile`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => {\n        switch (res.status) {\n          case 200:\n          case 201:\n            return res.json();\n\n          default:\n            this.setError();\n            return Promise.reject();\n        }\n      }).then(user => this.setUser(user));\n    };\n\n    this.logout = () => {\n      this.user = null;\n      sessionStorage.clear();\n      this.state = RequestState.PENDING;\n    };\n\n    this.setUser = user => {\n      this.user = user;\n      this.state = RequestState.SUCCESS;\n\n      if (user[\"token\"]) {\n        sessionStorage.setItem(\"token\", user.token);\n      }\n    };\n\n    this.setError = () => {\n      this.state = RequestState.ERROR;\n    };\n  }\n\n}\n\ndecorate(UserStore, {\n  user: observable,\n  state: observable\n});\nexport default new UserStore();","map":{"version":3,"sources":["/home/ivan/IdeaProjects/tpo1/vk-auth-react-nestjs/frontend/src/stores/UserStore.ts"],"names":["observable","decorate","RequestState","UserStore","user","state","PENDING","loginVk","code","LOADING","fetch","process","env","REACT_APP_API_HOST","method","body","JSON","stringify","headers","then","res","status","json","setError","Promise","reject","setUser","getProfile","token","sessionStorage","getItem","Authorization","logout","clear","SUCCESS","setItem","ERROR"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,MAArC;AAEA,SAASC,YAAT,QAA6B,oBAA7B;;AAWA,MAAMC,SAAN,CAAgB;AAAA;AAAA,SACdC,IADc,GACA,IADA;AAAA,SAEdC,KAFc,GAENH,YAAY,CAACI,OAFP;;AAAA,SAIdC,OAJc,GAIHC,IAAD,IAAkB;AAC1B,WAAKH,KAAL,GAAaH,YAAY,CAACO,OAA1B;AAEA,aAAOC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,gBAAnC,EAAoD;AAC9DC,QAAAA,MAAM,EAAE,MADsD;AAE9DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAET,UAAAA;AAAF,SAAf,CAFwD;AAG9DU,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHqD,OAApD,CAAL,CAOJC,IAPI,CAOEC,GAAD,IAAS;AACb,gBAAQA,GAAG,CAACC,MAAZ;AACE,eAAK,GAAL;AACA,eAAK,GAAL;AACE,mBAAOD,GAAG,CAACE,IAAJ,EAAP;;AACF;AACE,iBAAKC,QAAL;AACA,mBAAOC,OAAO,CAACC,MAAR,EAAP;AANJ;AAQD,OAhBI,EAiBJN,IAjBI,CAiBEf,IAAD,IAAU,KAAKsB,OAAL,CAAatB,IAAb,CAjBX,CAAP;AAkBD,KAzBa;;AAAA,SA2BduB,UA3Bc,GA2BD,MAAM;AACjB,WAAKtB,KAAL,GAAaH,YAAY,CAACO,OAA1B;AACA,YAAMmB,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAd;AAEA,UAAI,CAACF,KAAL,EAAYJ,OAAO,CAACC,MAAR;AAEZ,aAAOf,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,gBAAnC,EAAoD;AAC9DK,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPa,UAAAA,aAAa,EAAG,UAASH,KAAM;AAFxB;AADqD,OAApD,CAAL,CAMJT,IANI,CAMEC,GAAD,IAAS;AACb,gBAAQA,GAAG,CAACC,MAAZ;AACE,eAAK,GAAL;AACA,eAAK,GAAL;AACE,mBAAOD,GAAG,CAACE,IAAJ,EAAP;;AACF;AACE,iBAAKC,QAAL;AACA,mBAAOC,OAAO,CAACC,MAAR,EAAP;AANJ;AAQD,OAfI,EAgBJN,IAhBI,CAgBEf,IAAD,IAAU,KAAKsB,OAAL,CAAatB,IAAb,CAhBX,CAAP;AAiBD,KAlDa;;AAAA,SAoDd4B,MApDc,GAoDL,MAAM;AACb,WAAK5B,IAAL,GAAY,IAAZ;AACAyB,MAAAA,cAAc,CAACI,KAAf;AACA,WAAK5B,KAAL,GAAaH,YAAY,CAACI,OAA1B;AACD,KAxDa;;AAAA,SA0DdoB,OA1Dc,GA0DHtB,IAAD,IAAiB;AACzB,WAAKA,IAAL,GAAYA,IAAZ;AACA,WAAKC,KAAL,GAAaH,YAAY,CAACgC,OAA1B;;AAEA,UAAI9B,IAAI,CAAC,OAAD,CAAR,EAAmB;AACjByB,QAAAA,cAAc,CAACM,OAAf,CAAuB,OAAvB,EAAgC/B,IAAI,CAACwB,KAArC;AACD;AACF,KAjEa;;AAAA,SAmEdL,QAnEc,GAmEH,MAAM;AACf,WAAKlB,KAAL,GAAaH,YAAY,CAACkC,KAA1B;AACD,KArEa;AAAA;;AAAA;;AAwEhBnC,QAAQ,CAACE,SAAD,EAAY;AAClBC,EAAAA,IAAI,EAAEJ,UADY;AAElBK,EAAAA,KAAK,EAAEL;AAFW,CAAZ,CAAR;AAKA,eAAe,IAAIG,SAAJ,EAAf","sourcesContent":["import { observable, decorate } from \"mobx\";\n\nimport { RequestState } from \"types/RequestState\";\n\nexport interface IUser {\n  id: number;\n  email: string;\n  grant: number;\n  name: string;\n  token: string;\n  avatar_url: string | null;\n}\n\nclass UserStore {\n  user: IUser = null;\n  state = RequestState.PENDING;\n\n  loginVk = (code: string) => {\n    this.state = RequestState.LOADING;\n\n    return fetch(`${process.env.REACT_APP_API_HOST}/auth/login/vk`, {\n      method: \"POST\",\n      body: JSON.stringify({ code }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        switch (res.status) {\n          case 200:\n          case 201:\n            return res.json();\n          default:\n            this.setError();\n            return Promise.reject();\n        }\n      })\n      .then((user) => this.setUser(user));\n  };\n\n  getProfile = () => {\n    this.state = RequestState.LOADING;\n    const token = sessionStorage.getItem(\"token\");\n\n    if (!token) Promise.reject();\n\n    return fetch(`${process.env.REACT_APP_API_HOST}/users/profile`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((res) => {\n        switch (res.status) {\n          case 200:\n          case 201:\n            return res.json();\n          default:\n            this.setError();\n            return Promise.reject();\n        }\n      })\n      .then((user) => this.setUser(user));\n  };\n\n  logout = () => {\n    this.user = null;\n    sessionStorage.clear();\n    this.state = RequestState.PENDING;\n  };\n\n  setUser = (user: IUser) => {\n    this.user = user;\n    this.state = RequestState.SUCCESS;\n\n    if (user[\"token\"]) {\n      sessionStorage.setItem(\"token\", user.token);\n    }\n  };\n\n  setError = () => {\n    this.state = RequestState.ERROR;\n  };\n}\n\ndecorate(UserStore, {\n  user: observable,\n  state: observable,\n});\n\nexport default new UserStore();\n"]},"metadata":{},"sourceType":"module"}